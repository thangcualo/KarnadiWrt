#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt with immortalwrt
# Source code repository: https://github.com/immortalwrt/immortalwrt / Branch: openwrt-21.02
#============================================================================================

name: Build OpenWrt with immortalwrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_board:
        description: "Select router"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - R619AC-128M
env:
  REPO_URL: https://github.com/thangcualo/immortalwrt
  REPO_BRANCH: 21.02.02
  FEEDS_CONF: router-config/immortalwrt-21.02/feeds.conf.default
  CONFIG_FILE: router-config/immortalwrt-21.02/config
  DIY_P1_SH: router-config/immortalwrt-21.02/diy-part1.sh
  DIY_P2_SH: router-config/immortalwrt-21.02/diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo mkdir -p /workdir
          sudo chown ${USER}:${GROUPS} /workdir
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clone source code
        working-directory: /workdir
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          df -hT ${PWD}
          git clone -q --single-branch --depth 1 ${REPO_URL} -b ${REPO_BRANCH} openwrt
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

      - name: Load custom feeds
        run: |
          [[ -e "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "build_tag=KarnadiWrt_Aml_immortalwrt_$(date +"%m.%d.%H%M")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.compile.outputs.build_tag }}
          artifacts: openwrt/bin/targets/*/*/*rootfs.tar.gz
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Clean up server space
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        run: |
          cd openwrt/
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}

